@*@model List<ProductListViewModel>*@
@model PaginatedList<ProductListViewModel>
@{
    ViewBag.Title = "Product List";

    //bool haspreviousPage=Model.Has
}


<div class="card">
    <div class="card-header">
        <h3 class="card-title text-white">Product List</h3>
    </div>
    <div class="card-body">
        <form method="get" asp-controller="Product" asp-action="ProductList">

            <div class="row pb-5">

                <div class="col-sm-3">

                    <div class="input-group">
                        <input asp-for="@Model.SearchText" placeholder="Search" class="form-control pull-right" />
                        <span class="input-group-append"><button class="btn btn-facebook pull-right" title="Search"><span><i class="la la-search"></i></span></button></span>

                    </div>

                </div>

                <div class="col-sm-3">
                    <div class="row text-center">
                        <div class="input-group">
                            <select class="form-control" name="PageSize" asp-items="@ViewBag.rowSize as List<SelectListItem>">
                                <option selected="selected">Select Row</option>
                            </select>
                            <span class="input-group-append"><button class="btn btn-facebook btn-xs"><i class="la la-2x la-refresh"></i></button></span>
                        </div>
                    </div>



                </div>

            </div>
        </form>


        <div class="row">
            <div class="col-md-12 mt-3">
                <table class="table table-responsive-md table-bordered text-center" id="productList">
                    <thead class="bg-secondary">
                        <tr class="text-white">
                            <th>SL</th>
                            <th>Image</th>
                            <th>Code</th>
                            <th>Description</th>
                            <th>Model</th>
                            <th>Size</th>
                            <th>Color</th>
                            <th>Price</th>
                            <th>Action</th>



                            @*<th>SizeName</th>
                                <th>SizeType</th>
                                <th>Unitprice</th>
                                <th>OpeningBalance</th>*@
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                    @if (Model != null && Model.Count > 0)
                    {
                        int sl = ((Model.PageIndex - 1) * Model.PageSize) == 0 ? 1 : ((Model.PageIndex - 1) * Model.PageSize) + 1;

                        foreach (var _model in Model)
                        {
                            string photopath = @_model.PhotoPath != null ? "~/" + ImagePath.GetProductImagePath(_model.PhotoPath) : ImagePath.GetBlankImageFromRootFolder();
                            // string url = @_model.PhotoPath != null ? ImagePath.GetProductImagePath(_model.PhotoPath) : ImagePath.GetBlankImageFromRootFolder();
                            <tr>
                                <td>@sl</td>
                                <td>

                                    <img class="rounded" src="@photopath" asp-append-version="true" width="90" height="90" alt="No-Image" />

                                </td>
                                <td>@_model.Code</td>
                                <td>@_model.Description</td>
                                <td>@_model.ModelName</td>
                                <td>@_model.SizeName</td>
                                <td>@_model.Color</td>
                                <td>@_model.Unitprice</td>
                                <td>
                                    <a asp-action="Edit" asp-controller="Product" asp-route-id="@_model.Id" class="btn btn-outline-secondary btn-xs" title="Edit"><span><i class="mdi mdi-pencil"></i></span></a>
                                    
                                    <a asp-route-id="@_model.Id" class="btn btn-outline-info btn-xs" title="Product Information" data-toggle="modal" data-target="#Modal_Product_Details_@_model.Id"><span><i class="mdi mdi-information-outline"></i></span></a>
                                    @Html.Partial("~/Views/Shared/Product/_productDetails.cshtml", _model)
                                    
                                    <button class="btn btn-outline-danger btn-xs" title="Delete"><span><i class="mdi mdi-delete"></i></span></button>

                                </td>
                               

                            </tr>
                            sl = sl + 1;
                        }

                    }
                </table>
            </div>

        </div>


        @*Pagination Bar*@




        @{
            int PreviousPage = (Model.PageIndex - 1) <= 0 ? 1 : Model.PageIndex - 1;
            int NextPage = (Model.PageIndex + 1) >= Model.TotalPage ? Model.TotalPage : Model.PageIndex + 1;

            int pagestart = 1;
            int pageEnd = Model.TotalPage;
            bool isFirstPageActive = !Model.HasPreviousPage;
            bool isLastPageActive = !Model.HasNextPage;


        }
        <div class="btn-toolbar">
            <div class="btn-group">


                <form method="get" asp-controller="Product" asp-action="ProductList">

                    <button disabled="@isFirstPageActive" class="@(isFirstPageActive ? "btn btn-xs btn-outline-dark" : "btn btn-xs btn-outline-danger")" title="@(isFirstPageActive ? "disabled" : "Active" )"><span><i class="la la-angle-double-left"></i></span> </button>
                    <input hidden name="pagenumber" value="@pagestart" />
                    <input hidden asp-for="@Model.SearchText" />
                    <input hidden asp-for="@Model.PageSize" />
                </form>



                <form method="get" asp-controller="Product" asp-action="ProductList">

                    <button disabled="@isFirstPageActive" class="@(isFirstPageActive ? "btn btn-xs btn-outline-dark" : "btn btn-xs btn-outline-danger")" title="@(isFirstPageActive ? "disabled" : "Active" )"><span><i class="la la-angle-left"></i></span> </button>
                    <input hidden name="pagenumber" value="@PreviousPage" />
                    <input hidden asp-for="@Model.SearchText" />
                    <input hidden asp-for="@Model.PageSize" />
                </form>
                @for (int i = 1; i <= Model.TotalPage; i++)
                {


                    <form method="get" asp-controller="Product" asp-action="ProductList" asp-route-pagenumber="@i">
                        <button class="btn_paginate @(i==Model.PageIndex ? "active" : "" ) btn btn-xs btn-outline-danger">@i</button>
                        <input hidden name="pagenumber" value="@i" />
                        <input hidden asp-for="@Model.SearchText" />
                        <input hidden asp-for="@Model.PageSize" />
                    </form>

                }

                <form method="get" asp-controller="Product" asp-action="ProductList">
                    <div class="page-item">
                        <button disabled="@isLastPageActive" class="@(isLastPageActive ? "btn btn-xs btn-outline-dark" : "btn btn-xs btn-outline-danger")" title="@(isLastPageActive ? "disabled" : "Active" )"><span><i class="la la-angle-right"></i></span> </button>
                        <input hidden name="pagenumber" value="@NextPage" />
                        <input hidden asp-for="@Model.SearchText" />
                        <input hidden asp-for="@Model.PageSize" />
                    </div>
                </form>
                <form method="get" asp-controller="Product" asp-action="ProductList">
                    <button disabled="@isLastPageActive" class="@(isLastPageActive ? "btn btn-xs btn-outline-dark" : "btn btn-xs btn-outline-danger")"><span><i class="la la-angle-double-right" title="@(isLastPageActive ? "disabled" : "Active" )"></i></span> </button>
                    <input hidden name="pagenumber" value="@pageEnd" />
                    <input hidden asp-for="@Model.SearchText" />
                    <input hidden asp-for="@Model.PageSize" />
                </form>

            </div>
        </div>


    </div>
    <div class="card-footer">

    </div>
</div>





@{
    ProductListViewModel productlis = new ProductListViewModel();
            }













@section Scripts{
    <script>
        $(document).ready(function () {

            $(".btn_paginate").click(function () {
                var blnlast = $(this).find("span").find("i").hasClass("la")

                if (btnlast == true)
                {
                    $(this).prop("disabled", true);
                }


            });

            function loadDataTable() {

                @*new DataTable("#productList", {
                    ajax: '@Url.Action("LoadDataTable", "Product")',
                    columns: [

                        { data: 'Code' },
                        { data: 'Description' },
                        { data: 'Category' },
                        { data: 'BrandName' },
                        { data: 'ModelName' },
                        { data: 'Color' }]
                });*@


                //var datas = [
                //    code: "Rana",

                //]

                @*$.ajax({
                    url: '@Url.Action("LoadDataTable", "Product")',
                    method: "GET",
                    dataType: "JSON",
                    success: function (data) {

                        console.log(data)
                        $("#productList").DataTable({
                            data: data.dataTables,
                            columns: [
                                //{
                                //    'data': 'photoPath',
                                //    //'render': function (photoPath) {
                                //    //    var path = photoPath!=null ? "/Projects/Images/Product/" + photoPath :null
                                //    //    var img = '<img src="' + path + '" height="100px" width="100px" />'
                                //    //    return img;
                                //    //}
                                //},
                                { 'data': 'code' },
                                { 'data': 'description' },
                                { 'data': 'category' },
                                { 'data': 'sizeName' },
                                { 'data': 'color' },
                                { 'data': 'unitprice' },
                                {
                                    'data': 'id',
                                    'render': function (id) {
                                        var href = '@Url.Action("Edit","Product")/' + id;
                                        var button = "<button type='submit' class='btn btn-xs btn-danger' title='Delete'><span><i class='mdi mdi-18px mdi-delete'></i></span></button>"
                                        var action = '<a href="' + href +'" class="btn btn-xs btn-info" asp-action="Edit" asp-controller="Product" asp-route-id=id title="Edit"><span><i class="mdi mdi-18px mdi-pencil"></i></span></a>'

                                        var formtag = "<form method='post' asp-controller='Product' asp-action='Delete' asp-route-id='" + id + "'>" + action + button + "</form>"
                                        return formtag
                                    }

                                }


                                //{ 'data': 'Code' },
                                //{ 'data': 'Description' },
                                //{ 'data': 'Category' },
                                //{ 'data': 'BrandName' },
                                //{ 'data': 'ModelName' },
                                //{ 'data': 'Color' },
                                //{ 'data': 'SizeName' },
                                //{ 'data': 'SizeType' },
                                //{ 'data': 'Unitprice' },
                                //{ 'data': 'OpeningBalance' },

                            ]
                        })

                    }, error:function(err) {
                        alert(err.message)
                    }

                })*@
            }

            loadDataTable();


        })
    </script>



}