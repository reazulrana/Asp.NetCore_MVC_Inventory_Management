@model ProductCreateViewModel

@{
    ViewBag.Title = "Create Product";

}





<form method="post" asp-controller="Product" asp-action="Create" enctype="multipart/form-data">
    <div class="card">
        <div class="card-header bg-secondary">
            <h3 class="card-title text-white">Create Product</h3>
        </div>
        <div class="card-body bg-danger-light">

            <div class="row">
                <div class="col-md-12">
                    <div class="text-danger" asp-validation-summary="All"></div>
                </div>
            </div>

            <partial name="_Messages" />

            @Html.Partial("~/Views/Shared/Product/_Product.cshtml", Model)


        </div> @*End card-body section*@
        <div class="card-footer">
            <div class="row">
                <div class="col-sm-12">
                    <button type="submit" class="float-md-left col-md-3 btn btn-whatsapp bt-xs">Create <span class="btn-icon-right"><i class="mdi mdi-plus"></i></span></button>
                    <a asp-controller="Product" asp-action="ProductList" class="mt-sm-2 col-md-3 float-md-right btn btn-linkedin bt-xs">Go To Product List <span class="btn-icon-right"><i class="mdi mdi-view-list"></i></span></a>

                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts
{


    <script src="~/DuplicateModelShow.js"></script>
    <script src="~/Projects/Public/GlobalFunction.js"></script>



    <script>
//const { valHooks } = require("jquery");

        $(document).ready(function () {



            //checl if Dropdown field is empty

            function IsEmptyDropdownField(field) {
                var val = field
                var blnflag = false
                if (val == "" || val === undefined || val == null || val == -1) {
                    blnflag = true

                }
                return blnflag
            }
            
            //$("#CategoryId").select2({
            //theme:"bootstrap"    
            //});
            //$("#Brandid").select2({
            //theme: "bootstrap"
            //});
            //$("#ModelId").select2({
            //    theme: "bootstrap"

            //});
            //$('.multi-select').select2(
            //    {
            //        theme: "bootstrap"

            //    }
            //);
            //$("#ModelId").dblclick(function () {
            //    $("#divModel").toggle();
            //})

            //put Model dropdown selected text into code inputbox
            $("#ModelId").change(function () {

                var text = $(this).find(":selected").text();
                var codeinput = $("#Code");
                $(codeinput).val(text);

            })






            //keypress section
            $("#Code").keydown(function (event) {
                var keycode = event.keyCode ? event.keyCode : event.which;
                var editcodechecked = $("#editcode").is(":checked");

                if (editcodechecked == false) {
                    if (keycode == 8 || keycode == 46)
                    {
                        event.preventDefault();
                    }
                }

            })

            $("#Code").keypress(function (event) {
                var keycode = event.keyCode ? event.keyCode : event.which;

                var editcodechecked = $("#editcode").is(":checked");
                if (editcodechecked == false)
                {
                    event.preventDefault();
                }

            })
            //Prevent while " Character use
            $("#txtSaveSize").keypress(function (event) {
                var keycode = event.keyCode ? event.keyCode : event.which;
               
                if (keycode == 34 || keycode == 39) {
                    sweetalert("This Caracter Is Reserv Character of HTML You Can Not Use It Rather use single Quotation Twice ''")
                    event.preventDefault();
                }

            })



            function sweetalert(message) {
                sweetAlert("Oops...", "You Enter ( " + message.toUpperCase() + " )", "error")
            }

            // OpeningQty Focusin and focusout

            //calculate Stock Qty * UnitPrice
            $("#OpeningQty").focusin(function () {

                $(this).select();
                
            }).focusout(function () {
                var StockQty = $(this).val();
                var Unitprice = $("#Unitprice").val();


                if (StockQty == "" || StockQty == null || StockQty == undefined) {
                    $(this).val(0);
                    return;
                }


                if (Unitprice == "" || Unitprice == null || Unitprice == undefined) {
                    $(Unitprice).val(0);
                    return;
                }
                else
                {
                    $("#OpeningBalance").val(StockQty * Unitprice);
                }

            })
       
            // Unitprice Focusin and focusout

            //calculate Stock Qty * UnitPrice
            $("#Unitprice").focusin(function () {

                $(this).select();

            }).focusout(function () {
                var StockQty = $("#OpeningQty").val();
                var Unitprice = $(this).val();

                if (Unitprice == "" || Unitprice == null || Unitprice == undefined) {
                    $(this).val(0);
                    return;
                }

                if (StockQty == "" || StockQty == null || StockQty == undefined) {
                    $(Unitprice).val(0);
                    return;
                }
                else {
                    $("#OpeningBalance").val(StockQty * Unitprice);
                }

            })



       

            //Measurement section
        //show div for create Measurement
            $("#btnAddMeasurement").click(function () {
                $("#divMeasurement").toggle();

            })

            //create Measurement
            $('#btnSaveMeasurement').click(function ()
            {
                var val = $("#txtSaveMeasurement").val();

                if (val === undefined || val == "" || val == null)
                {
                    sweetAlert("Measurement Field is Blank Please Enter Measurement First");
                    $("#txtMeasurement").focus();
                    return;
                }

                var data = {
                    measurement: val
                }

                callCreate_record_with_ajax(url = '@Url.Action("Create_Measure_With_Ajax", "Measure")', method = "POST", data = data, dataType = "JSON", appendElement = ".find_Measurement", dropdownName = "Measurement", fieldNamtToEmpty = "#txtSaveMeasurement", hideElement ="#divMeasurement")

            })







        //category section
        //show div for create category
            $("#btnAddCategory").click(function () {
                $("#divCategory").toggle();

            })

            //create category
            $('#btnSaveCategory').click(function ()
            {
                var val =$("#txtSaveCategory").val();

                if (val === undefined || val == "" || val == null)
                {
                    sweetAlert("Category Field is Blank Please Enter Category First");

                    $("#txtSaveCategory").focus();
                    return;
                }

                var data = {
                    ctype: val
                }

                callCreate_record_with_ajax(url = '@Url.Action("Create_Category_With_Ajax", "Category")', method = "POST", data = data, dataType = "JSON", appendElement = ".find_Category", dropdownName = "Category", fieldNamtToEmpty = "#txtSaveCategory", hideElement="#divCategory")
            })


            //ajax callCreate_record_with_ajax section
            function callCreate_record_with_ajax(url, method, data, dataType, appendElement, dropdownName,fieldNamtToEmpty,hideElement)
            {

                try {
                    Create_record_with_ajax(url = url, method = method, data = data, dataType = dataType, appendElement = appendElement, dropdownName = dropdownName, fieldNamtToEmpty = fieldNamtToEmpty, hideElement = hideElement)

                }
                catch {
                    alert("Data Unable To Save")
                }



            }

            //bnrand section
            $("#btnAddBrand").click(function () {
                var catid = $(".find_Category").find(":selected").val();



                if (IsEmptyDropdownField(catid) == true)
                {
                    sweetAlert("Please Category Not Selected")

                    return;
                }

                $("#divBrand").toggle();

            })




            $("#btnSaveBrand").click(function () {

                var catid = $(".find_Category").find(":selected").val();
                var brandName = $("#txtSaveBrand").val();

                if (IsEmptyInputField(brandName) == true) {
                    sweetAlert("Brand Field is Blank Please Enter Brand First");

                    return;
                }




                var data = {
                    catid: catid,
                    brandName: brandName
                }

                callCreate_record_with_ajax(url = '@Url.Action("Create_Brand_With_Ajax", "Brand")', method = "POST", data = data, dataType = "JSON", appendElement = ".find_Brand", dropdownName = "Brand", fieldNamtToEmpty = "#txtSaveBrand", hideElement="#divBrand")


            })


            //Model section
        $("#btnAddModel").click(function ()
        {
            var brandid = $(".find_Brand").find(":selected").val();

            if (IsEmptyDropdownField(brandid) == true)
            {
                sweetAlert("Brand Not Selected");


                return;
            }


            $("#divModel").toggle();

        })

            $("#btnSaveModel").click(function () {
                var brandid = $(".find_Brand").find(":selected").val();
                var modelName = $("#txtSaveModel").val();

                if (IsEmptyInputField(modelName) == true)
                {
                    sweetAlert("Model Is Empty");

                    return;
                }

                var data = {
                    brandid: brandid,
                    modelName: modelName
                }

                callCreate_record_with_ajax(url = '@Url.Action("Create_Model_With_Ajax", "Model")', method = "POST", data = data, dataType = "JSON", appendElement = ".find_Model", dropdownName = "Model", fieldNamtToEmpty = "#txtSaveModel", hideElement="#divModel")

            })



            //dimension radio button click event
            // Change Placeholder attribute
            $("#dimension").click(function ()
            {
                $('#txtSaveSize').attr("placeholder","Width x Height x Length");
            })

            //dimension radio button click event
            // Change Placeholder attribute
            $("#sizelist").click(function () {
                $('#txtSaveSize').attr("placeholder", "Enter Size");
            })



            //Color section
            $("#btnAddColor").click(function () {
                $("#divColor").toggle();

            })

            $("#btnSaveColor").click(function () {
                  var colorName = $("#txtSaveColor").val();

                if (IsEmptyInputField(colorName) == true) {
                    sweetAlert("Color Is Empty");
                    return;
                }

                var data = {
                    colorName: colorName
                }


                callCreate_record_with_ajax(url = '@Url.Action("Create_Category_With_Ajax", "Color")', method = "Post", data = data, dataType = "JSON", appendElement = ".find_Color", dropdownName="Color","#txtSaveColor","#divColor")

            })


          

            //Size section
            $("#btnAddSize").click(function () {


                //var size = $('input[name="SizeType"]:checked').val();
                var size = $("input[name='SizeType']:checked").val();


                if ((size == null || size == "" || size == -1))
                {
                    sweetAlert("No Size Type Is Selected");

                    return;
                }

                    $("#divSize").toggle();




            })

            $("#btnSaveSize").click(function () {
                var size = $("#txtSaveSize").val();
                var sizetype = $("input[name='SizeType']:checked").val();


                if (IsEmptyInputField(size) == true) {

                    sweetalert("Size Is Empty");
                    return;
                }

                var data = {
                    size: size,
                    sizetype: sizetype
                }


                callCreate_record_with_ajax(url = '@Url.Action("Create_Size_With_Ajax","Size")', method = "Post", data = data, dataType = "JSON", appendElement = ".find_Size", dropdownName="Size","#txtSaveSize","#divSize")

            })

           


            //Manufacture section
            $("#btnAddManufacture").click(function () {
                $("#divManufacture").toggle();

            })

            $("#btnSaveManufacture").click(function () {
                 var manufacturename = $("#txtSaveManufacture").val();


                if (IsEmptyInputField(manufacturename) == true)
                {
                    sweetalert("Manufacturename Is Empty")
                    $(manufacturename).focus();
                }

                var data = {
                    manufacturename: manufacturename,

                }
                var url = '@Url.Action("Create_Manufacture_With_Ajax", "Manufacture")'

                callCreate_record_with_ajax(url = url, method = "Post", data = data, dataType = "JSON", appendElement = ".find_Manufacture", dropdownName = "Manufacture", "#txtSaveManufacture", "#divVendor")

            })

            //Bin section
            $("#btnAddBin").click(function () {
                $("#divBin").toggle();

            })

            $("#btnSaveBin").click(function () {

                 var bin = $("#txtSaveBin").val();

                if (IsEmptyInputField(bin) == true)
                {
                    sweetalert("Bin Is Empty")
                    return;
                }

                var data = {
                    binno: bin

                }


                callCreate_record_with_ajax(url = '@Url.Action("Create_BinNo_With_Ajax", "Shelf")' , method = "Post", data = data, dataType = "JSON", appendElement = ".find_Bin", dropdownName = "Bin", "#txtSaveBin", "#divBin")



            })


            //show the image into img tag
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    console.log(reader);
                    reader.onload = function (e) {
                        $('#productImage').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }



            //get image file name  from input file
            $('input[type="file"]').change(function (e) {

                readURL(this);

                var geekss = e.target.files[0].name;
                $(".custom-file-label").text(geekss + ' is the selected file.');

            });


            //Load Size Dropdown List
            $(".size_value").click(function () {
                var val = $(this).val();

                var data =
                {
                    id: val
                }
                Load_Dropdown_with_ajax(url='@Url.Action("FindSizeByID", "Product")', method= "GET", data = data, dataType = "JSON", appendElement = ".find_Size", dropdownName = "Size")

            });



            $(".find_Brand").change(function () {

                var val = $(this).find(":selected").val();
                if (val == "" || val === undefined)
                {
                    alert("There Is Something in Brand Dropdown List wrong Please Chcek")
                    return;
                }

                //for passing json data to ajax call
                data = {
                    brandid: val
                }

                Load_Dropdown_with_ajax(url='@Url.Action("FindModelByBrandID", "Product")', method= "GET", data = data, dataType = "JSON", appendElement = ".find_Model", dropdownName = "Model")

            })


            $(".find_Category").change(function () {

                var val = $(this).find(":selected").val();;
                if (val == "" || val === undefined)
                {
                    alert("There Is Something in category Dropdown List wrong Please Chcek")
                    return;
                }
                var data = {
                     catid: val
                }

                Load_Dropdown_with_ajax(url='@Url.Action("FindBrandByCategoryId","Product")', method="GET", data = data, dataType = "Json", appendElement = ".find_Brand", dropdownName = "Brand")

            }) //end of .find_Category click event


            function Load_Dropdown_with_ajax(url, method, data, dataType, appendElement, dropdownName) {

                $.ajax({
                    url: url,
                    method: method,
                    data: data,
                    dataType: dataType,
                    success: function (data)
                    {

                        $(appendElement).empty();

                        $(appendElement).append('<option value="-1">Select ' + dropdownName + '</option>');

                        if (data.success == true) {
                            console.log(data.output)
                                $.each(data.output, function (index, item) {

                                    if (dropdownName.toLocaleLowerCase() == "brand".toLocaleLowerCase()) {
                                      var option = '<option value="' + item.id + '">' + item.brandName + '</option>'
                                    $(appendElement).append(option);
                                    }

                                    else if (dropdownName.toLocaleLowerCase() == "model".toLocaleLowerCase()) {
                                        var option = '<option value="' + item.id + '">' + item.modelName + '</option>'

                                        $(appendElement).append(option);
                                    }

                                    else if (dropdownName.toLocaleLowerCase() == "Size".toLocaleLowerCase()) {
                                        var option = '<option value="' + item.productSize + '">' + item.productSize + '</option>'

                                        $(appendElement).append(option);
                                    }

                                })



                        }
                        else {
                            alert("Data Not Found In Database")

                        }
                    },
                    error: function (err)
                    {
                        alert("You Call Error Functioon");
                    }
                })

            }


        }) //end of document.ready

    </script>

}