@model PurchaseEditViewModel

@{
    ViewBag.Title = "Edit Purchase";
}

<style>

    .divAutocomplete table tbody tr:hover {
        color: white;
        background-color: black
    }

    .purchaseno {
        background-color: lightgray !important;
        color: white;
    }
</style>

<form method="post" asp-controller="purchase" asp-action="Edit">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title text-white">Create Purchase</h3>
        </div>
        <div class="card-body">
            @*Global Message*@
            <div class="row">
                <div class="col-md-12">
                    <div class="text-danger" asp-validation-summary="All"></div>
                </div>
            </div>

            <partial name="_Messages" />



            <div class="col-md-12 border mb-2">
                <div class="row">
                    <div class="col-md-12 pl-2 bg-dark">
                        <h5 class="card-title p-2 text-white">Purchase Information</h5>
                    </div>
                </div>
                    
                <input hidden type="text" asp-for="@Model.id" />

                @Html.Partial("~/Views/Shared/Purchase/_PurcchaseDetails.cshtml", Model)
            </div>

            <div class="border col-md-12 mb-2">
                <div class="row">
                    <div class="col-md-12 pl-2 bg-dark">
                        <h5 class="card-title text-white p-2">Product Information</h5>
                    </div>
                </div>

                @Html.Partial("~/Views/Shared/Purchase/_PurchaseEditProductDetails.cshtml",Model)
            </div>

            <div class="col-md-12 border mb-2">
                <div class="row">
                    <div class="col-md-12 pl-2 bg-dark mb-2">
                        <h5 class="card-title p-2 text-white">Costing Information</h5>
                    </div>
                </div>

                @Html.Partial("~/Views/Shared/Purchase/_PurchasePriceDetails.cshtml", Model)
            </div>


        </div>
        <div class="card-footer">
            <div class="form-group">
                <button class="btn btn-facebook col-md-3 btn-xs">Update<span class="pl-2"><i class="ml-1 mdi mdi-pencil"></i></span></button>

                <a asp-action="PurchaseList" asp-controller="Purchase" class="btn btn-info col-md-3 btn-xs float-md-right">List<span class="pl-2"><i class="mdi mdi-view-list"></i></span></a>
            </div>
        </div>
    </div>

</form>



@section Scripts
{

    <script src="~/DuplicateModelShow.js"></script>
    <script src="~/ProductAddRemove.js"></script>
    <script src="~/Amount.js"></script>
    <script>

        //const { table } = require("console");

        $(document).ready(function () {


            onloadPage()
            function onloadPage()
            {
                $("#Invoice").attr("disabled", "disabled");
                $("#Invoice").addClass("..purchaseno");
            }



            // Cost Amount Bill Section

            //$("#PaymentOnCash").change(function () {
            //    let amountbill = amountclass()
            //    $("#Dues").val((amountbill.TotalAmount - amountbill.PaymentOnCash))



            //});
            //$("#Discount").change(function()
            //{
            //    let amountbill = amountclass()
            //    $("#NetAmount").val((amountbill.GrossAmount - amountbill.Discount))


            //})

            //$("#Transport").change(function () {
            //    let amountbill = amountclass()
            //    let totalbill = 0

            //    totalbill = parseInt((parseInt(amountbill.TotalAmount) + parseInt(amountbill.Transport) + parseInt(amountbill.Others)))
            //    $("#GrossAmount").val(totalbill)
            //    $("#NetAmount").val(totalbill)
            //})

            //$("#Others").change(function () {
            //    let amountbill = amountclass()
            //    let totalbill =0

            //    totalbill = parseInt((parseInt(amountbill.TotalAmount) + parseInt(amountbill.Transport) + parseInt(amountbill.Others)))
            //    $("#GrossAmount").val(totalbill)
            //    $("#NetAmount").val(totalbill)

            //})


            

            //function amountclass()
            //{
            //    let _amount = {
            //        TotalAmount: $("#TotalAmount").val(),
            //        PaymentOnCash: $("#PaymentOnCash").val(),
            //        Dues: $("#Dues").val(),
            //        Transport: $("#Transport").val(),
            //        Others: $("#Others").val(),
            //        GrossAmount: $("#GrossAmount").val(),
            //        Discount: $("#Discount").val(),
            //        NetAmount: $("#NetAmount").val(),
            //        PaymentTypeId: $("#PaymentTypeId").val(),


            //    }

            //    return _amount
            //}









            //clear all product field
            //$("#btnClearProduct").click(function () {


            //})



            //calculate total product purchage price amount
            //function calculatePurchageProduct()
            //{
            //    let tr = $("#productlist tr")
            //    $("#TotalAmount").val('0')
            //    if ($(tr).length > 0) {
            //        var amount = 0;
            //        $(tr).each(function (i, item) {
            //            amount = (amount + parseInt($(this).find("td:last").prev().text()));
            //        })
            //        $("#TotalAmount").val(amount) //product cost


            //        let _amountclass = amountclass();

            //        let grossamount = (parseInt(_amountclass.TotalAmount) + parseInt(_amountclass.Transport) + parseInt(_amountclass.Others))
            //        let netamount = (grossamount - parseInt(_amountclass.Discount))
            //        $("#GrossAmount").val(grossamount)
            //        $("#NetAmount").val(netamount)
            //        $("#Dues").val(parseInt(_amountclass.TotalAmount) - parseInt(_amountclass.PaymentOnCash))
            //    }

            //}


        

            ////btnAddPaymentType
            //$("#btnAddPaymentType").click(function () {
            //    $("#divPaymentType").toggle()

            //})

            //end of Cost Amount Bill Section



        /*$('#TrDate').datepicker();*/
        //$("#productlist tr").dblclick(function () {
        //    var id = product();

        //    alert(id.Code);
        //})


            // start Product Section

        //product add to prodcut list tabel
        //$("#btnAddProduct").click(function () {

        //    var _product = product();
        //    if (_product.TotalAmount == "" || _product.TotalAmount == "0" || _product.TotalAmount == isNaN)
        //    {
        //        alert("Total Price is '0'");
        //        return;
        //    }
        //    append_New_Row();
        //})

        //calculate Total Price with qty change
        //$("#txtProductQty").focus(function ()
        //{
        //    var val = $(this).val();
        //    if (isNaN(val))
        //    {
        //        $(this).val('0');
        //    }



        //})

        //$("#txtProductQty").focusout(function () {
        //    var qty = $(this).val()
        //    var price = $('#txtProductPurchasePrice').val()

        //    var totalprice = qty * price;
        //    if (isNaN(totalprice)) {
        //        alert("Qty Is Not Number Please Type Number")
        //        $(this).focus();
        //    }

        //    $('#txtProductTotalAmount').val(qty * price);
        //})

        //calculate Total Price with price change
        //    $("#txtProductPurchasePrice").focus(function () {
        //    var val = $(this).val();
        //    if (isNaN(val)) {
        //        $(this).val('0');
        //    }



        //})

        $("#txtProductPurchasePrice").focusout(function () {
            var qty = $(this).val()
            var price = $('#txtProductQty').val()

            var totalprice = qty * price;
            if (isNaN(totalprice)) {
                alert("Purchase Is Not Number Please Type Number")
                $(this).focus();
            }

            $('#txtProductTotalAmount').val(qty * price);
        })



        function product() {
            var _product = {
                ProductId: $("#txtProductId").val(),
                Image: $("#txtImage").val(),
                Code: $("#txtProductCode").val(),
                Description: $("#txtProductDescription").val(),
                Model: $("#txtProductModel").val(),
                Size: $("#txtProductSize").val(),
                Color: $("#txtProductColor").val(),
                Qty: $("#txtProductQty").val(),
                PurchasePrice: $("#txtProductPurchasePrice").val(),
                TotalAmount: $("#txtProductTotalAmount").val(),
            }
            return _product
        }

            function ClearField() {
                $("#txtsearchfield").val('')
                $("#txtProductId").val('')
                $("#txtProductCode").val('')
                $("#txtProductDescription").val('')

                $("#txtProductModel").val('')
                $("#txtProductSize").val('')
                $("#txtProductColor").val('')
                $(".pimage").attr("src", '')
                $("#txtImage").val('')
                $("#txtProductQty").val('0')
                $("#txtProductPurchasePrice").val('0')
                $("#txtProductTotalAmount").val('0')
            }


            //tr Remove from product table By Delete Button click
            //$("#productlist").on("click", "button", function () {

            //    if(confirm("Do You Want to Remove Row"))
            //    {
            //    $(this).closest("tr").remove();
            //        calculatePurchageProduct();
            //    }
            //})

        //function append_New_Row()
        //{

        //    var LastSl = $('#productlist tr').length + 1;
        //    var p = product();
        //    let _photopath = (p.Image == "" || p.Image == null) ? "/Projects/Images/DefaultImage/No_Image_Available.jpg" : "/Projects/Images/Product/" + p.Image

        //    var sl = '<td><input hidden name="ProductIds" type="text" value="' + p.ProductId + '"/>' + LastSl + '</td>';
        //    var Image = '<td> <input hidden name="Images" value="' + p.Image + '" />  <img src = "' + _photopath + '" height = 90 width = 90 /> </td > ';
        //    var Code = '<td> <input hidden name="Codes" value="' + p.Code + '" />' + p.Code + '</td>';
        //    var Description = '<td><input hidden name="Descriptions" value="' + p.Description + '" />' + p.Description + '</td>';
        //    var Model = '<td><input hidden name="Models" value="' + p.Model + '" />' + p.Model + '</td>';
        //    var Size = '<td><input hidden name="Sizes" value="' + p.Size + '" />' + p.Size + '</td>';
        //    var Color = '<td><input hidden name="Colors" value="' + p.Color + '" />' + p.Color + '</td>';
        //    var Qty = '<td> <input hidden name="Qtys" type="text" value="' + p.Qty + '"/>' + p.Qty + '</td>';
        //    var PurchasePrice = '<td> <input hidden name="Prices" type="text" value="' + p.PurchasePrice + '"/>' + p.PurchasePrice + '</td>';
        //    var TotalAmount = '<td>' + (p.Qty * p.PurchasePrice) + '</td>';
        //    var action = '<td><button type="button" class="btn btn-xs btn-danger delete_Product"><span><i class="mdi mdi-delete"></i></span></button></td>';


        //    var tr = '<tr id="'+ sl +'">' + sl + Image + Code + Description + Model + Size + Color + Qty + PurchasePrice + TotalAmount + action  + '</tr>'

        //    $('#productlist').append(tr);
        //    calculatePurchageProduct();
        //    ClearField()


        //}


        //Autocomplete Section
        $.ui.autocomplete.prototype._renderMenu = function (ul, items) {
            var self = this;
            //table definitions

            ul.append("<div class='divAutocomplete' style='height:200px; overflow-y:scroll; z-index:10000'><table class='prodcutAutocomplete table table-border'><thead class='bg-secondary text-white'><tr> <th>Sl</th> <th>Code</th> <th>Description</th> <th>Category</th> <th>Model</th> <th>Size</th> <th>Color</th> </tr></thead><tbody></tbody></table></div>");
            $.each(items, function (index, item) {
                self._renderItemData(ul, ul.find("table tbody"), item);
            });
        };
        $.ui.autocomplete.prototype._renderItemData = function (ul, table, item) {
            return this._renderItem(table, item).data("ui-autocomplete-item", item);
        };
        $.ui.autocomplete.prototype._renderItem = function (table, item) {

            //var items = JSON.stringify(item)
            return $("<tr class='ui-menu-item' role='presentation'></tr>")
                .attr("data-val", item.id) //this line for passing item to focus object and select object
                //.data("item.autocomplete", item)
                //item.length == isNaN ? 1 : (item.length + 1)
                //<tr> <th>Sl</th> <th>Code</th> <th>Description</th> <th>Category</th> <th>Model</th> <th>Size</th> <th>Color</th> </tr >
                .append("<td>" + ($(".prodcutAutocomplete tbody tr").length+1) + "</td> <td>" + item.code + "</td> <td>" + item.description + "</td> <td>" + item.category + "</td> <td>" + item.model + "</td> <td>" + item.size + "</td> <td>" + item.color + "</td>")
                .appendTo(table);
        };

        //radion Button Code Description Model Change event

        var searchfield="model" // this parameter is used for search code description model autocomplete globally
        $(".searchField").change(function () {
            searchfield = $(this).val();
            $("#txtsearchfield").focus();


        })

        $("#txtsearchfield").autocomplete({
            minLength: 1,
            focus: function (event, ui) {
                if (ui.item != undefined) {
                   var photopath = "/Projects/Images/Product/";
                    photopath = ui.item.photopath == null ? "/Projects/Images/DefaultImage/No_Image_Available.jpg" : photopath + ui.item.photopath

                   // $("#txtImage").val(ui.item.photopath),
                        $("#txtProductId").val(ui.item.value)

                        $("#txtProductCode").val(ui.item.code)
                        $("#txtProductDescription").val(ui.item.description)

                        $("#txtProductModel").val(ui.item.model)
                        $("#txtProductSize").val(ui.item.size)
                        $("#txtProductColor").val(ui.item.color)
                        $(".pimage").attr("src", photopath)
                    $("#txtImage").val(ui.item.photopath)

                }
                return false;
            }, // end of focuas
            //you can write for select too
            select: function (event, ui) {
                var photopath = "/Projects/Images/Product/";
                photopath = ui.item.photopath == null ? "/Projects/Images/DefaultImage/No_Image_Available.jpg" : photopath + ui.item.photopath
                $("#txtProductCode").val(ui.item.code),
                    $("#txtProductId").val(ui.item.value),
                    $("#txtProductDescription").val(ui.item.description),
                    $("#txtProductModel").val(ui.item.model),
                    $("#txtProductSize").val(ui.item.size),
                    $("#txtProductColor").val(ui.item.color),
                    $(".pimage").attr("src", photopath)
                $("#txtImage").val(ui.item.photopath)
                //searchfield = "";
                return false
            },
            //source: projects,
             source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("FindProduct","Product")',
                    method: "Get",
                    data: { term: request.term, searchField: searchfield},
                    dataType: "JSON",
                    success: function (data) {
                        var starttable = '<table>'
                        var endtable = '</table>'
                        var td = '<td> Rana </td>';
                        var tr = '<tr>' + td + '</tr>'
                        var table = starttable + tr + endtable
                        response(data.output)
                    },
                    error: function (err) {

                    }
                }) //end of ajax

            } // end of source bracket


        })
    });

        //random json values
        //var projects = [
        //    { id: 1, value: "Thomas", model: 134, description: "Teacher" },
        //    { id: 65, value: "Richard", model: 1743, description: "Waiter" },
        //    { id: 235, value: "Harold", model: 7342, description: "Cleaner" },
        //    { id: 78, value: "Santa Maria", model: 787, description: "Manager" },
        //    { id: 75, value: "Gunner", model: 788, description: "Director" },
        //    { id: 124, value: "Shad", model: 124, description: "Chairman" },
        //    { id: 1233, value: "Aziz", model: 3544, description: "Bangladeshi" },
        //    { id: 244, value: "Buet", model: 7847, description: "Student" }
        //];
    </script>
}

